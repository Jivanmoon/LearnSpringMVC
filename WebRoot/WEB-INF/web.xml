<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>SSM</display-name>
 	<!-- 加载spring容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/classes/spring/applicationContext-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
 	<!-- springmvc前端控制器 -->
   	<servlet>
	  	<servlet-name>springmvc</servlet-name>
	  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	  	<!-- contextConfigLocation：配置springmvc加载的配置文件
	  	包括处理器映射器、映射器等等
	  	如果不配置contextConfigLocation，默认加载/WEB-INF/servlet名称-servlet.xml
	  	 -->
	  	<init-param>
	  		<param-name>contextConfigLocation</param-name>
	  		<param-value>classpath:spring/springmvc.xml</param-value>
	  	</init-param>
  	</servlet>
  	 <servlet-mapping>
	  	<servlet-name>springmvc</servlet-name>
	  	<!-- 
	  	1、第一种方法：*.action访问以.action结尾的 由DispatcherServlet进行解析
	  	2、第二种方法：/，所有访问的地址都由DispatcherServlet进行解析，对于静态的文件解析需要配置不让DispatcherServlet解析
	  	使用此种方法可以实现RESTful风格的url
	  	3、第三种方法：/*，这种配置不对，最终我们要转发到一个jsp页面时，仍然会由DispatcherServlet解析jsp，不能根据jsp页面找到Handler，所以会报错
	  	 -->
	  	<url-pattern>*.action</url-pattern>
  	</servlet-mapping>
  	<!-- springmvc前端控制器，REST配置-->
   	<servlet>
	  	<servlet-name>springmvc_rest</servlet-name>
	  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	  	<init-param>
	  		<param-name>contextConfigLocation</param-name>
	  		<param-value>classpath:spring/springmvc.xml</param-value>
	  	</init-param>
  	</servlet>
  	<servlet-mapping>
	  	<servlet-name>springmvc_rest</servlet-name>
	  	<url-pattern>/</url-pattern>
  </servlet-mapping>
    <filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>